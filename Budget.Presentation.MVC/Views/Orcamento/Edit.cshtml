@model Budget.Presentation.MVC.ViewModels.OrcamentoViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>OrcamentoViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fixa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Fixa)
                    @Html.ValidationMessageFor(model => model.Fixa, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPessoa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <select id="TipoPessoa" name="TipoPessoa">
                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.TipoPessoa)
                    {
                        var selected = (item.Selected) ? " selected" : " " ;
                        <option value="@item.Value" @selected >@item.Text</option>
                    }
                </select>

                @Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoOrcamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <select id="TipoOrcamento" name="TipoOrcamento">
                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.TipoOrcamento)
                    {
                        var selected = (item.Selected) ? " selected" : " ";
                        <option value="@item.Value" @selected>@item.Text</option>
                    }
                </select>
                
                @Html.ValidationMessageFor(model => model.TipoOrcamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPagamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <select id="TipoPagamento" name="TipoPagamento">
                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.TipoPagamento)
                    {
                        var selected = (item.Selected) ? " selected" : " ";
                        <option value="@item.Value" @selected>@item.Text</option>
                    }
                </select>
                
                
                @Html.ValidationMessageFor(model => model.TipoPagamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaxaPorcentagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaxaPorcentagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxaPorcentagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
